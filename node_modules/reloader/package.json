{
  "name": "reloader",
  "homepage": "http://github.com/konteck/reloader",
  "author": {
    "name": "Alex Movsisyan",
    "url": "http://github.com/konteck"
  },
  "repository": {
    "type": "git",
    "url": "http://github.com/konteck"
  },
  "description": "Restart application on file change, work even on Windows",
  "keywords": [
    "development",
    "restart",
    "reload"
  ],
  "version": "1.0.2",
  "main": "./lib/reloader.js",
  "engine": "node >= 0.6.0",
  "readme": "# reloader\r\n\r\nReload your Node.js application if it's source code changed.\r\nTested on Windows, Mac OSX, Linux.\r\n\r\nHow to use:\r\n\r\nTo use it just include 'reloader' as usual NodeJS module\r\nand put code that must be started after every restart in\r\n'onReload' callback. eg.\r\n\r\n```js\r\nvar reloader = require('reloader');\r\nreloader({\r\n    onReload: function () {\r\n        app.listen(3000);\r\n}});\r\n```\r\n\r\nIn case if you go to use Reloader with Express framework:\r\n\r\n```js\r\n// Reloader setup demonstration\r\nvar app = require('express').createServer();\r\n\r\napp.configure(function () {\r\n    app.use(app.router);\r\n\r\n    require('reloader')({\r\n        watchModules: true,\r\n        onStart: function () {\r\n            console.log('Started on port: 3000');\r\n        },\r\n        onReload: function () {\r\n            app.listen(3000);\r\n        }});\r\n});\r\n\r\napp.get('/', function (req, res) {\r\n    res.send('Work!');\r\n});\r\n```\r\n\r\nParameters\r\n\r\nwatchModules: false\r\nonRestart: function\r\nonStart: function",
  "_id": "reloader@1.0.2",
  "_from": "reloader@*"
}
